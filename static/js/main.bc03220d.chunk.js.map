{"version":3,"sources":["listItems.js","Title.js","Orders.js","Store/dataContext.js","MarkerBox.js","MapContainer.js","BodyContainer.js","App.js","serviceWorker.js","index.js"],"names":["mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","secondaryListItems","ListSubheader","inset","Title","props","Typography","component","variant","color","gutterBottom","children","createData","id","date","name","shipTo","paymentMethod","amount","rows","preventDefault","event","useStyles","makeStyles","theme","seeMore","marginTop","spacing","Orders","classes","Fragment","Table","size","TableHead","TableRow","TableCell","align","TableBody","map","row","key","className","Link","href","onClick","dataContext","React","createContext","MarkerClusterGroup","leaflet","setting","markerClusterGroup","L","this","contextValue","layerContainer","MapLayer","withLeaflet","leafletBox","width","height","markerObjSetting","chunkedLoading","removeOutsideVisibleBounds","iconCreateFunction","cluster","count","getChildCount","clusterSize","DivIcon","html","iconSize","MapContainer","clesses","useState","initPosition","setinitPosition","data","useContext","useMemo","MarkerBox","geometry","properties","Marker","position","coordinates","useEffect","setState","navigator","geolocation","getCurrentPosition","pos","presState","coords","latitude","longitude","err","console","warn","code","message","enableHighAccuracy","timeout","maximumAge","Map","center","zoom","maxZoom","duration","TileLayer","attribution","url","Copyright","Date","getFullYear","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","memo","open","setOpen","fixedHeightPaper","clsx","CssBaseline","AppBar","Toolbar","IconButton","edge","aria-label","noWrap","Badge","badgeContent","Drawer","Divider","List","Container","maxWidth","Grid","item","xs","Paper","Box","pt","App","storeList","setStoreList","fetchData","a","fetch","response","json","features","Provider","value","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.bc03220d.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport BarChartIcon from '@material-ui/icons/BarChart';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nexport const mainListItems = (\n    <div>\n        <ListItem button>\n            <ListItemIcon>\n                <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Dashboard\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <ShoppingCartIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Orders\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <PeopleIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Customers\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <BarChartIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Reports\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <LayersIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Integrations\" />\n        </ListItem>\n    </div>\n);\n\nexport const secondaryListItems = (\n    <div>\n        <ListSubheader inset>Saved reports</ListSubheader>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Current month\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Last quarter\" />\n        </ListItem>\n        <ListItem button>\n            <ListItemIcon>\n                <AssignmentIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Year-end sale\" />\n        </ListItem>\n    </div>\n);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\n\nexport default function Title(props) {\n    return (\n        <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\n            {props.children}\n        </Typography>\n    );\n}\n\nTitle.propTypes = {\n    children: PropTypes.node,\n};","import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Title from './Title';\n\n// Generate Order Data\nfunction createData(id, date, name, shipTo, paymentMethod, amount) {\n    return { id, date, name, shipTo, paymentMethod, amount };\n}\n\nconst rows = [\n    createData(0, '16 Mar, 2019', 'Elvis Presley', 'Tupelo, MS', 'VISA ⠀•••• 3719', 312.44),\n    createData(1, '16 Mar, 2019', 'Paul McCartney', 'London, UK', 'VISA ⠀•••• 2574', 866.99),\n    createData(2, '16 Mar, 2019', 'Tom Scholz', 'Boston, MA', 'MC ⠀•••• 1253', 100.81),\n    createData(3, '16 Mar, 2019', 'Michael Jackson', 'Gary, IN', 'AMEX ⠀•••• 2000', 654.39),\n    createData(4, '15 Mar, 2019', 'Bruce Springsteen', 'Long Branch, NJ', 'VISA ⠀•••• 5919', 212.79),\n];\n\nfunction preventDefault(event) {\n    event.preventDefault();\n}\n\nconst useStyles = makeStyles(theme => ({\n    seeMore: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nexport default function Orders() {\n    const classes = useStyles();\n    return (\n        <React.Fragment>\n            <Title>Recent Orders</Title>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Date</TableCell>\n                        <TableCell>Name</TableCell>\n                        <TableCell>Ship To</TableCell>\n                        <TableCell>Payment Method</TableCell>\n                        <TableCell align=\"right\">Sale Amount</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {rows.map(row => (\n                        <TableRow key={row.id}>\n                            <TableCell>{row.date}</TableCell>\n                            <TableCell>{row.name}</TableCell>\n                            <TableCell>{row.shipTo}</TableCell>\n                            <TableCell>{row.paymentMethod}</TableCell>\n                            <TableCell align=\"right\">{row.amount}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            <div className={classes.seeMore}>\n                <Link color=\"primary\" href=\"#\" onClick={preventDefault}>\n                    See more orders\n        </Link>\n            </div>\n        </React.Fragment>\n    );\n}","import React from 'react';\n\nconst dataContext = React.createContext({});\n\nexport default dataContext;","import { MapLayer, withLeaflet } from 'react-leaflet'\nimport \"leaflet.markercluster/dist/leaflet.markercluster\"\nimport \"leaflet.markercluster/dist/MarkerCluster.css\"\nimport \"leaflet.markercluster/dist/MarkerCluster.Default.css\"\nimport L from 'leaflet'\n\nclass MarkerClusterGroup extends MapLayer {\n  createLeafletElement({ children, leaflet: { map }, setting }) {\n\n    const markerClusterGroup = new L.markerClusterGroup(setting)\n    this.contextValue = { layerContainer: markerClusterGroup, map }\n\n    return markerClusterGroup\n  }\n}\n\nexport default withLeaflet(MarkerClusterGroup);","import React, { useState, useEffect, useContext, useMemo } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport L from 'leaflet';\nimport dataContext from './Store/dataContext';\nimport MarkerBox from './MarkerBox';\nimport './mapContainer.css';\n\nfunction getCurrentPosition(setState) {\n  navigator.geolocation.getCurrentPosition(\n    pos => {\n      setState((presState) => {\n        return (\n          [pos.coords.latitude, pos.coords.longitude]\n        );\n      });\n    },\n    err => {\n      console.warn('ERROR(' + err.code + '): ' + err.message);\n    },\n    {\n      enableHighAccuracy: true,\n      timeout: 5000,\n      maximumAge: 0\n    }\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  leafletBox: {\n    width: '100%',\n    height: '100vh'\n  }\n}));\n\nconst markerObjSetting = {\n  chunkedLoading: true,\n  removeOutsideVisibleBounds: true,\n  iconCreateFunction: function (cluster) {\n    const count = cluster.getChildCount()\n    let clusterSize = {\n      name: \"small\",\n      size: 30\n    }\n    if (count > 10) {\n      clusterSize.name = \"medium\"\n      clusterSize.size = 60\n    }\n    if (count > 50) {\n      clusterSize.name = \"large\"\n      clusterSize.size = 90\n    }\n    return new L.DivIcon({\n      html: count,\n      className: `marker-custom marker-custom-${clusterSize.name}`,\n      iconSize: null\n    })\n  }\n}\n\nconst MapContainer = () => {\n  const clesses = useStyles();\n  const [initPosition, setinitPosition] = useState([0, 0]);\n  const data = useContext(dataContext);\n\n  const markerClusterGroup = useMemo(() => {\n    return <MarkerBox setting={markerObjSetting}>\n      {data.map(({ geometry, properties }) => {\n        return <Marker position={[geometry.coordinates[1], geometry.coordinates[0]]} key={properties.id}>\n          {/* <MaskPopup {...properties} /> */}\n        </Marker>\n      })}\n    </MarkerBox>\n  }, [data])\n\n\n  useEffect(() => {\n    getCurrentPosition(setinitPosition);\n  }, []);\n\n  return (\n    <Map\n      className={clesses.leafletBox}\n      center={initPosition}\n      zoom={12}\n      maxZoom={40}\n      duration={3}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors'\n        url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n      ></TileLayer>\n      {markerClusterGroup}\n    </Map>\n  );\n};\n\nexport default MapContainer;\n","import React, { memo } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Drawer from '@material-ui/core/Drawer';\nimport Box from '@material-ui/core/Box';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport Badge from '@material-ui/core/Badge';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Link from '@material-ui/core/Link';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { mainListItems, secondaryListItems } from './listItems';\nimport Orders from './Orders';\nimport MapContainer from './MapContainer';\n\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'Copyright © '}\n      <Link color='inherit' href='https://material-ui.com/'>\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst drawerWidth = 350;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    width: drawerWidth,\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    position: 'relative',\n    height: 600,\n    overflow: 'hidden',\n  }\n}));\n\nexport default memo(function Stage() {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(true);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position='absolute'\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge='start'\n            color='inherit'\n            aria-label='open drawer'\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component='h1'\n            variant='h6'\n            color='inherit'\n            noWrap\n            className={classes.title}\n          >\n            口罩地圖\n          </Typography>\n          <IconButton color='inherit'>\n            <Badge badgeContent={4} color='secondary'>\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant='permanent'\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose)\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List>\n      </Drawer>\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth='lg' className={classes.container}>\n          <Grid container spacing={3}>\n            {/* map */}\n            <Grid item xs={12}>\n              <Paper className={fixedHeightPaper}>\n                <MapContainer />\n              </Paper>\n            </Grid>\n            {/* Recent Orders */}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Orders />\n              </Paper>\n            </Grid>\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      </main>\n    </div>\n  );\n});\n","import React, { useEffect, useState } from 'react';\nimport BodyCOntainer from './BodyContainer';\nimport dataContext from './Store/dataContext';\n\nconst sixSchoolApi =\n  'https://raw.githubusercontent.com/kiang/pharmacies/master/json/points.json'\n\nconst App = () => {\n  const [storeList, setStoreList] = useState([])\n\n  const fetchData = async url => {\n    const response = await fetch(url)\n    const data = await response.json()\n    setStoreList(data.features)\n  }\n\n  // 取得診所資料 + 使用者的定位資料\n  useEffect(() => {\n    fetchData(sixSchoolApi);\n  }, [])\n\n  return (\n    <>\n      <dataContext.Provider value={storeList}>\n        <BodyCOntainer />\n      </dataContext.Provider>\n    </>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}